---
- name: create prometheus system group
  group:
    name: prometheus
    system: true
    state: present

- name: create prometheus system user
  user:
    name: prometheus
    system: true
    shell: "/usr/sbin/nologin"
    group: prometheus
    createhome: false

- name: create prometheus data directory
  file:
    path: "{{ prometheus_db_dir }}"
    state: directory
    owner: prometheus
    group: prometheus
    mode: 0755

- name: create prometheus configuration directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: prometheus
    mode: 0750
  with_items:
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_config_dir }}/conf.d"
    - "{{ prometheus_config_dir }}/rules"
    - "{{ prometheus_config_dir }}/file_sd"

- name: download prometheus binary to temporary folder
  become: false
  get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/home/{{ admin_user.name }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    #checksum: "sha256:{{ prometheus_checksum }}" #checksum is not available due to commenting out delegation to localhost when running tasks
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  # run_once: true # <-- this canfalset be set due to multi-arch support
  #delegate_to: localhost # commented out due to issues when ran on  macOS

- name: unpack prometheus binaries
  become: false
  unarchive:
    remote_src: yes
    src: "/home/{{ admin_user.name }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/home/{{ admin_user.name }}"
    creates: "/home/{{ admin_user.name }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/prometheus"
  #delegate_to: localhost # commented out due to issues when ran on macOS
  check_mode: false

- name: propagate prometheus and promtool binaries
  copy:
    remote_src: yes
    src: "/home/{{ admin_user.name }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - prometheus
    - promtool
  check_mode: false
  notify:
    - restart prometheus

- name: propagate console libraries templates
  command: "cp -r /home/{{ admin_user.name }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/{{ item }}/ {{ prometheus_config_dir }}/{{ item }}/"
  with_items:
     - console_libraries
     - consoles
  check_mode: false
  notify:
    - restart prometheus

- name: remove prometheus binaries from old location
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /opt/prometheus/prometheus
    - /opt/prometheus/promtool
    - /opt/prometheus

- name: create systemd service unit
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart prometheus
