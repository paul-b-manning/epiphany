---
# Kubernetes worker node specific

- name: Check if node is registered with Kubernetes cluster
  shell: >-
    kubectl --kubeconfig=/home/{{ admin_user.name }}/.kube/config get nodes --no-headers -o=custom-columns=NAME:.metadata.name |
    grep -w {{ inventory_hostname }}
  register: hostname_in_cluster
  failed_when: hostname_in_cluster.rc == 2 or hostname_in_cluster.stderr # do not fail when grep doesn't match but detect errors in pipeline
  changed_when: false
  delegate_to: "{{ groups['master'][0] }}"

- name: Check if /var/lib/kubelet/config.yaml exists # created by 'kubeadm join'
  stat:
    path: /var/lib/kubelet/config.yaml
    get_attributes: False
    get_checksum: False
    get_mime: False
  register: kubelet_config_yaml
  changed_when: false

- name: Check if node has been joined
  set_fact:
    node_already_joined: "{{ hostname_in_cluster.rc == 0 and kubelet_config_yaml.stat.exists }}"
  changed_when: false

- name: Get token from master
  shell: kubeadm token list | grep -w authentication | grep -vwi invalid | awk '{print $1}' | head -1
  register: kubeadm_valid_token
  failed_when: kubeadm_valid_token.rc != 0 or kubeadm_valid_token.stderr # detect errors in pipeline
  changed_when: false
  delegate_to: "{{ groups['master'][0] }}"
  when: not node_already_joined

- name: Create new token
  command: kubeadm token create --ttl 4h --description "Token generated by Epiphany for 'kubeadm join'."
  register: kubeadm_new_token
  delegate_to: "{{ groups['master'][0] }}"
  when:
    - not node_already_joined
    - not kubeadm_valid_token.stdout

- name: Get CA key hash
  shell: >-
    openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null |
    openssl dgst -sha256 -hex | sed 's/^.* //'
  register: kubeadm_cert_hash
  changed_when: false
  delegate_to: "{{ groups['master'][0] }}"
  when: not node_already_joined

- name: Join kubernetes
  shell: >-
    kubeadm join {{ hostvars[groups['master'][0]]['ansible_default_ipv4']['address'] }}:6443 --token {{ kubeadm_token }}
    --discovery-token-ca-cert-hash sha256:{{ kubeadm_cert_hash.stdout }}
  vars:
    kubeadm_token: "{{ kubeadm_valid_token.stdout if kubeadm_valid_token.stdout else kubeadm_new_token.stdout_lines[-1] }}"
  when:
    - not node_already_joined
    - not groups['master'][0] == inventory_hostname

- name: Include kubelet configuration tasks
  include_role:
    name: kubernetes-common
    tasks_from: configure-kubelet

- name: Create /home/{{ admin_user.name }}/.kube
  file:
    state: directory
    path: /home/{{ admin_user.name }}/.kube
    owner: "{{ admin_user.name }}"
    group: "{{ admin_user.name }}"

- name: Copy kubelet.conf as /home/{{ admin_user.name }}/.kube/config
  copy:
    src: /etc/kubernetes/kubelet.conf
    dest: /home/{{ admin_user.name }}/.kube/config
    remote_src: yes
    owner: "{{ admin_user.name }}"
    group: "{{ admin_user.name }}"
  when: not groups['master'][0] == inventory_hostname
