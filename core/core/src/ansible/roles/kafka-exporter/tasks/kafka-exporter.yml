---
- name: create kafka_exporter system group
  group:
    name: kafka_exporter
    system: true
    state: present

- name: create kafka_exporter system user
  user:
    name: kafka_exporter
    system: true
    shell: "/usr/sbin/nologin"
    group: kafka_exporter
    createhome: false

- name: download kafka_exporter binary to local folder
  become: false
  get_url:
    url: "{{ url }}"
    dest: "{{ kafka_exporter_download_path }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost

- name: unpack node_exporter binary
  become: false
  unarchive:
    src: "{{ kafka_exporter_download_path }}"
    dest: "{{ kafka_exporter_download_dir }}"
    creates: "{{ kafka_exporter_download_dir }}/{{ kafka_exporter_release_name }}/kafka_exporter"
  delegate_to: localhost
  check_mode: false

- name: create /opt/kafka_exporter directories
  become: yes
  file:
    path: "{{ item }}"
    recurse: yes
    owner: root
    group: "kafka_exporter"
    mode: 0750
    state: directory
  with_items:
  - /opt/kafka_exporter

- name: propagate kafka_exporter binaries
  copy:
    src: "{{ kafka_exporter_download_dir }}/{{ kafka_exporter_release_name }}/kafka_exporter"
    dest: "/opt/kafka_exporter/kafka_exporter"
    mode: 0755
    owner: root
    group: kafka_exporter
  check_mode: false
  notify:
    - restart kafka-exporter

- name: install kafka_exporter service to systemd
  template:
    src: kafka-exporter.service.j2
    dest: /etc/systemd/system/kafka-exporter.service
    owner: root
    group: root
    mode: 0644

- name: configure systemd to use kafka-exporter service
  systemd:
    daemon_reload: yes
    enabled: yes
    name: kafka-exporter.service

- name: copy file_sd_config to prometheus hosts
  template:
    dest: "{{ prometheus_config_dir }}/file_sd/kafka-exporter-{{ inventory_hostname }}.yml"
    src: file_sd_config.yml.j2
    owner: root
    group: root
    mode: 0644
  delegate_to: "{{ item }}"
  with_inventory_hostnames:
    - prometheus
  notify: restart prometheus on remote servers
